@model Classifieds.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account"))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count() != 0)
    {
        // We have a model validation error
        <div class="alert alert-danger" role="alert">
            @ViewData.ModelState[""].Errors.First().ErrorMessage
        </div>
    }
    <div class="form-group row">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-3 col-lg-2 col-form-label" })
        <div class="col-md-9 col-lg-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "small text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-3 col-lg-2 col-form-label" })
        <div class="col-md-9 col-lg-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "small text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 col-lg-2 col-form-label" })
        <div class="col-md-9 col-lg-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "small text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <div class="offset-md-3 col-md-9 offset-lg-2 col-lg-10">
            <input type="submit" class="btn btn-outline-dark" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
